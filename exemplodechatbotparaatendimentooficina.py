# -*- coding: utf-8 -*-
"""ExemploDeChatBotParaAtendimentoOficina.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P6iTIatVifxKxTvrAtJyzekU3Y2LMM1y
"""

#Test Professor
import random

# Dicionário de respostas para diferentes perguntas
responses = {
    "qual é a situação de saúde do paciente?": [
        "Se o paciente está com dificuldades para respirar, procure ajuda médica imediatamente.",
        "Se o paciente está com sintomas leves, peça para ele ficar em casa e monitorar seus sintomas.",
        "Se o paciente apresenta sintomas graves, como febre alta e dificuldade para respirar, procure ajuda médica imediatamente."
    ],
    "quais são os sintomas de COVID-19?": [
        "Os sintomas mais comuns de COVID-19 incluem febre, tosse seca e cansaço.",
        "Outros sintomas incluem dores no corpo, dor de cabeça, perda de paladar ou olfato, dor de garganta e congestão nasal.",
        "Em casos graves, a COVID-19 pode causar pneumonia, falência de múltiplos órgãos e morte."
    ],
    "como posso prevenir a transmissão de COVID-19?": [
        "Lave as mãos regularmente com água e sabão ou use álcool gel.",
        "Cubra o nariz e a boca com o cotovelo dobrado ou um lenço de papel ao tossir ou espirrar.",
        "Evite tocar no rosto e mantenha uma distância de pelo menos um metro de outras pessoas.",
        "Use uma máscara facial quando estiver em público ou perto de outras pessoas."
    ]
}

# Função para iniciar a conversa
def start_chat():
    print("Olá! Eu sou um assistente virtual para recomendação de ações de primeiros socorros para vítimas de COVID-19.")
    print("Como posso ajudar?")
    while True:
        # Obter entrada do usuário
        user_input = input("> ").lower().strip()
        # Encerrar conversa se o usuário disser "tchau"
        if user_input == "tchau":
            print("Até logo!")
            break
        # Verificar se a entrada do usuário corresponde a alguma chave no dicionário de respostas
        elif user_input in responses:
            # Obter uma resposta aleatória para a pergunta do usuário
            response = random.choice(responses[user_input])
            print(response)
        # Responder com uma mensagem genérica se a entrada do usuário não for reconhecida
        else:
            print("Desculpe, não entendi o que você disse. Você pode reformular a sua pergunta?")

start_chat()

import random

# Dicionário de respostas para problemas com automóveis
responses = {
    "pane elétrica": [
        "Se você está enfrentando uma pane elétrica, verifique se a bateria está funcionando corretamente.",
        "Certifique-se de que os cabos da bateria estejam conectados firmemente. Se necessário, tente dar uma chupeta.",
        "Se a bateria está boa, pode ser um problema com o sistema elétrico. É melhor chamar um mecânico."
    ],
    "pane seca": [
        "Se você está sem combustível, procure um posto de gasolina próximo o mais rápido possível.",
        "Se não for possível encontrar um posto, ligue para um serviço de reboque e avise sua localização."
    ],
    "problema mecânico": [
        "Em caso de problema mecânico, tente estacionar em um local seguro, longe do tráfego.",
        "Se você sabe como fazer reparos simples, como trocar um pneu furado, tente fazê-lo com segurança.",
        "Caso não saiba como fazer o reparo, chame um serviço de reboque ou um mecânico profissional."
    ],
    "incêndio": [
        "Se houver um incêndio em seu veículo, sua segurança é a prioridade. Saia do veículo imediatamente.",
        "Afaste-se do veículo e ligue para os bombeiros. Nunca tente apagar um incêndio sozinho, pois é perigoso."
    ]
}

# Função para iniciar a conversa
def start_chatCar():
    print("Olá! Eu sou um assistente virtual para atendimento de emergência na estrada.")
    print("Por favor, diga-me qual é o problema com seu automóvel, como 'pane elétrica', 'pane seca', 'problema mecânico' ou 'incêndio'.")
    while True:
        # Obter entrada do usuário
        user_input = input("> ").lower().strip()
        # Encerrar conversa se o usuário disser "tchau"
        if user_input == "obrigado":
            print("Até logo  e boa sorte!")
            break
        # Verificar se a entrada do usuário corresponde a alguma chave no dicionário de respostas
        elif user_input in responses:
            # Obter uma resposta aleatória para o problema do usuário
            response = random.choice(responses[user_input])
            print(response)
        # Responder com uma mensagem genérica se a entrada do usuário não for reconhecida
        else:
            print("Desculpe, não entendi o que você disse. Por favor, escolha entre 'pane elétrica', 'pane seca', 'problema mecânico' ou 'incêndio'.")

start_chatCar()